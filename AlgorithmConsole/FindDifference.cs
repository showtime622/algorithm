using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AlgorithmConsole
{
	public class FindDifference
	{
		/// <summary>
		/// very very smart sol!!!
		/// Given two strings s and t which consist of only lowercase letters.
		///String t is generated by random shuffling string s and then add one more letter at a random position.
		///Find the letter that was added in t.
		///
		/// Input:
		///s = "abcd"
		///t = "abcde"

		///Output:
		///e
		/// 
		/// Link: https://leetcode.com/problems/find-the-difference/submissions/
		/// 
		/// 
		/// Sol from this algorithm:
		/// num ^ num itself equals 0
		/// so for the string s, '\0' ^ 'a' ^ 'b' ^ 'c' ^ 'd'
		/// for the string t, '\0' ^[ 'a' ^ 'b' ^ 'c' ^ 'd' ^ 'a' ^ 'b' ^ 'c' ^ 'd'] ^ 'e' == 'e'
		/// cause nums ^ nums itself will return 0, the 'e' does not exist will be returned.
		/// Pay attention, 0 ^ 11 = 11. any nums ^ 0 will keep the num itself.
		/// </summary>
		/// <param name="s"></param>
		/// <param name="t"></param>
		/// <returns></returns>
		public static char FindTheDifference(string s, string t)
		{
			char c = (char)0;

			for(int i = 0; i < s.Length; i++)
			{
				c ^= s[i];
			}

			for(int j = 0; j < t.Length; j++)
			{
				c ^= t[j];
			}

			return c;
		}

		/// <summary>
		/// 
		/// </summary>
		/// abcd
		/// abcde
		/// return e
		/// <param name="s"></param>
		/// <param name="t"></param>
		/// <returns>My sol!!!! not work</returns>
		/// This is very stuiped sol from my, and the algorithm still have issues 
		public static char FindTheDifferenceMY(string s, string t)
		{
			if (s.IsNullOrEmpty() || t.IsNullOrEmpty() || t.Length <= s.Length)
			{
				return ' ';
			}

			int i = 0;
			while (i < s.Length)
			{
				if (s[i] != t[i])
				{
					return t[i];
				}
				i++;
			}

			if (i == s.Length)
			{
				return t[i];
			}

			return ' ';
		}
	}
}
